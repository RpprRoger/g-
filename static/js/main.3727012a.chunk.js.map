{"version":3,"sources":["components/List/search.svg","components/List/logo3.svg","components/List/icons/Buggyfriendly.svg","components/List/icons/short-sightedfriendly.svg","components/List/icons/welllit.svg","components/List/icons/Wellies.svg","components/List/icons/walkingbootfriendly.svg","components/List/icons/trainerfriendly.svg","components/List/icons/Wheelchairfriendly.svg","components/List/icons/sliphazard.svg","components/List/icons/flatsurface.svg","components/List/icons/child.svg","components/List/icons/road.svg","components/List/icons/learnbike.svg","components/Map/Map.js","components/FullscreenMap/FullscreenMap.js","components/Search/Search.js","components/List/icons/Icon.js","components/List/List.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","DefaultIcon","L","icon","iconUrl","shadowUrl","iconShadow","Marker","prototype","options","pulsingIcon","pulse","iconSize","color","navigator","alert","once","getFirst","geo","_ref","_ref2","Object","slicedToArray","lng","flip","features","geometry","coordinates","loc","EventEmitter","geolocation","watchPosition","position","console","log","emit","e","message","enableHighAccuracy","maximumAge","timeout","GaMap","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","undefined","self","func","setState","coords","latitude","longitude","addListener","removeListener","_this$props","route","children","centerRoute","objectWithoutProperties","centering","center","bboxArray","bbox","bounds","_ref5","_ref6","dec","_ref3","_ref4","inc","react_default","a","createElement","className","Map","assign","zoom","TileLayer","url","attribution","Popup","GeoJSON","data","Component","style","zIndex","bottom","left","transform","FullscreenMap","walking","startWalk","doneWalk","done","width","height","Map_Map","zoomControl","objectSpread","top","background","fontSize","padding","textAlign","active","length","index_es","onClick","variant","borderRadius","display","flexDirection","alignItems","role","aria-label","Link","to","pp","textDecoration","Icon","meta","tileData","field","name","image","buggy","shortsighted","wellList","wellies","trainerFriendly","wheelchair","slip","flat","child","road","learnbike","forEach","push","cellHeight","cols","Math","min","pickRandom","count","map","tile","key","evt","stopPropagation","Tooltip_default","disableHoverListener","title","enterDelay","leaveDelay","src","alt","justifyContent","Item","value","ListItem_default","ListOfWalks","list","fixtures","slice","_this2","flex","logo","marginTop","search","marginRight","List_default","walk","Card_default","onSelect","dragging","touchZoom","doubleClickZoom","scrollWheelZoom","path","CardContent_default","paddingTop","List_Item","distance","round","concat","time","id","existing","localStorage","getItem","history","createBrowserHistory","basename","process","theme","createMuiTheme","palette","primary","main","secondary","App","JSON","parse","selectRoute","setItem","stringify","styles","Router","Switch","Route","exact","List_List","components_FullscreenMap_FullscreenMap","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3727012a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.f87bce95.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo3.10b62017.svg\";","module.exports = __webpack_public_path__ + \"static/media/Buggyfriendly.69628421.svg\";","module.exports = __webpack_public_path__ + \"static/media/short-sightedfriendly.56bb2f30.svg\";","module.exports = __webpack_public_path__ + \"static/media/welllit.68552399.svg\";","module.exports = __webpack_public_path__ + \"static/media/Wellies.55a721e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/walkingbootfriendly.5f6a031d.svg\";","module.exports = __webpack_public_path__ + \"static/media/trainerfriendly.8d920a72.svg\";","module.exports = __webpack_public_path__ + \"static/media/Wheelchairfriendly.952c75dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/sliphazard.4ec770c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/flatsurface.d4689b2a.svg\";","module.exports = __webpack_public_path__ + \"static/media/child.37241932.svg\";","module.exports = __webpack_public_path__ + \"static/media/road.e8272fd7.svg\";","module.exports = __webpack_public_path__ + \"static/media/learnbike.8f4a6d47.svg\";","import React, { Component } from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport { GeoJSON, Map, TileLayer, Marker, Popup } from 'react-leaflet'\nimport L from 'leaflet';\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport './map.css';\nimport bbox from '@turf/bbox';\nimport EventEmitter from 'eventemitter3';\nimport '@ansur/leaflet-pulse-icon';\nimport '@ansur/leaflet-pulse-icon/dist/L.Icon.Pulse.css';\n\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n});\nL.Marker.prototype.options.icon = DefaultIcon;\n\nconst pulsingIcon = L.icon.pulse({ iconSize:[20,20], color:'#2d89ff' });\n\n\nif (!(\"geolocation\" in navigator)) {\n    alert('No geolocation!');\n}\n\nconst geoOptions = {\n    enableHighAccuracy: true,\n    maximumAge        : 500,\n    timeout           : 5000\n};\n\nlet once = false;\n\nconst handleError = (e) => {\n    if (!once) {\n        console.log(e.message);\n        once = true;\n    }\n}\nconst getMiddle = (geo) => {\n    const middleN = geo.features[0].geometry.coordinates.length;\n    return geo.features[0].geometry.coordinates[Math.round(middleN/2)]\n};\nconst flip = ([ lng, lat ]) => [lat, lng];\nconst getFirst = geo => flip(geo.features[0].geometry.coordinates[0]);\n\nconst inc = ([o, t]) => {\n    return [o + .0001, t + .0001];\n};\nconst dec = ([o, t]) => [o -.0001, t-.0001];\n\nconst loc = new EventEmitter();\nnavigator.geolocation.watchPosition((position) => {\n    console.log('got update');\n    loc.emit('up', position);\n}, handleError, geoOptions);\n\nclass GaMap extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            geo: undefined\n        };\n    }\n\n    componentDidMount() {\n        console.log('getting geolocation');\n        const self = this;\n        this.func = function(position) {\n            self.setState({ geo: [position.coords.latitude, position.coords.longitude] });\n        };\n        loc.addListener('up', this.func);\n    }\n\n    componentWillUnmount() {\n        loc.removeListener('up', this.func);\n    }\n\n    render() {\n        const { route, children, centerRoute, pulse, ...props } = this.props;\n        console.log('rendering geo', this.state);\n        let centering = {\n            center: this.state.geo\n        };\n\n\n        if (route && centerRoute) {\n            const bboxArray = bbox(route);\n            const corner1 = dec([bboxArray[1], bboxArray[0]]);\n            const corner2 = inc([bboxArray[3], bboxArray[2]]);\n            const bounds = [corner1, corner2];\n            centering = { bounds };\n        }\n\n        return (\n            <div className=\"map\">\n                <Map {...centering} zoom={16} {...props}>\n                    <TileLayer\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n                    />\n                    {this.state.geo && <Marker position={this.state.geo}>\n                        <Popup>\n                            You are here\n                        </Popup>\n                    </Marker>}\n                    <GeoJSON data={route} />\n                    {pulse && route ? <Marker icon={pulsingIcon} position={getFirst(route)} /> : null }\n                    {children}\n                </Map>\n            </div>\n        );\n    }\n}\n\nexport default GaMap;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Map from '../Map/Map';\nimport { Button } from '@material-ui/core';\n\nimport {pp} from '../../App';\n\nconst style = {\n    zIndex: '1000',\n    position: 'fixed',\n    bottom: '15%',\n    left: '50%',\n    transform: 'translateX(-50%)',\n};\n\nclass FullscreenMap extends Component {\n    state = {\n        walking: false,\n    };\n\n    startWalk = () => {\n        this.setState({ walking: true });\n    }\n\n    doneWalk = () => {\n        this.setState({\n            walking: false,\n            done: true,\n        });\n    }\n\n    render() {\n        const { props } = this;\n\n        return (\n            <div style={{ width: '100%', height: '100%'}}>\n                <Map {...props} pulse  zoomControl={false}>\n                    {!this.state.walking && !this.state.done && (\n                        <div style={{\n                            ...style,\n                            bottom: undefined,\n                            top: 0,\n                            transform: undefined,\n                            left: 0,\n                            width: '100%',\n                            background: 'rgba(255, 255, 255, 0.80)',\n                            fontSize: '1.5rem',\n                            padding: '1rem',\n                            textAlign: 'center',\n                        }}>\n                            Enjoy your {props.active && props.active.length} mile walk!\n                        </div>\n                    )}\n                    <div style={style}>\n                        {\n                            !this.state.walking && !this.state.done ?\n                            <Button onClick={this.startWalk} variant=\"extendedFab\" color=\"primary\">\n                                Start walk\n                            </Button> : null\n                        }\n                        {\n                            this.state.walking && (\n                                <Button onClick={this.doneWalk} variant=\"extendedFab\" color=\"primary\">\n                                    Finished!\n                                </Button>\n                            )\n                        }\n                        {\n                            this.state.done && (\n                                <p style={{\n                                    fontSize: '2rem',\n                                    background: 'rgba(255, 255, 255, 0.8)',\n                                    padding: '1rem',\n                                    borderRadius: '10%',\n                                    display: 'flex',\n                                    flexDirection: 'column',\n                                    alignItems: 'center',\n                                    textAlign: 'center',\n                                }}>\n                                    <span role=\"img\" aria-label=\"celebration emoji\">🎉</span> Congratulations!\n                                    <br />\n                                    You've walked another {props.active && props.active.length} miles!\n                                    <br />\n                                    <Link to={pp('/')} style={{textDecoration: 'none'}}>\n                                        <Button variant=\"extendedFab\" color=\"secondary\">\n                                            Get me another route\n                                        </Button>\n                                    </Link>\n                                </p>\n                            )\n                        }\n                    </div>\n                </Map>\n            </div>\n        )\n    }\n}\n\nexport default FullscreenMap;\n","import React, { Component } from 'react';\nimport SwipeableViews from 'react-swipeable-views';\n\nimport './search.css';\n\nclass Search extends Component {\n    state = {\n        page: 1,\n    }\n\n    submit = () => {\n        this.setState(({ page }) => ({ page: page + 1 }));\n    }\n\n    render() {\n        return (\n            <form class=\"search-form\" onSubmit={this.submit}>\n                <label>\n                    <select>\n                        <option value=\"0-1\">Less than 1 mile</option>\n                        <option value=\"0-2\">Less than 2 miles</option>\n                        <option value=\"0-3\">Less than 3 mile</option>\n                    </select>\n                </label>\n            </form>\n        );\n    }\n}\n\nexport default Search;\n","import React from 'react';\nimport buggy from './Buggyfriendly.svg';\nimport shortsighted from './short-sightedfriendly.svg';\nimport wellList from './welllit.svg';\nimport wellies from './Wellies.svg';\nimport walking from './walkingbootfriendly.svg';\nimport trainerFriendly from './trainerfriendly.svg';\nimport wheelchair from './Wheelchairfriendly.svg';\nimport slip from './sliphazard.svg';\nimport flat from './flatsurface.svg';\nimport child from './child.svg';\nimport road from './road.svg';\nimport learnbike from './learnbike.svg';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { GridList, GridListTile } from '@material-ui/core';\nimport pickRandom from 'pick-random';\n\nexport default ({meta}) => {\n    const tileData = [];\n\n    [\n        { field: 'isBuggyFriendly', name: 'Buggy friendly', image: buggy },\n        { field: 'isShortSightedFriendly', name: 'Short sighted friendly', image: shortsighted },\n        { field: 'isWellLit', name: 'Well lit', image: wellList },\n        { field: 'isWelliesNeeded', name: 'Wellies needed', image: wellies },\n        { field: 'isWalkingBootsNeeded', name: 'Walking boots needed', image: walking },\n        { field: 'isTrainerFriendly', name: 'Trainer friendly', image: trainerFriendly },\n        { field: 'isWheelchairFriendly', name: 'Wheelchair friendly', image: wheelchair },\n        { field: 'isSlipHazard', name: 'Slip hazard', image: slip },\n        { field: 'isFlatSurface', name: 'Flat surface', image: flat },\n        { field: 'isChildSafe', name: 'Child safe', image: child },\n        { field: 'isRoadSafe', name: 'Road safe', image: road },\n        { field: 'isLearningToRideAbike', name: 'Learning to ride a bike', image: learnbike },\n    ].forEach(({field, name, image}) => {\n        if (meta[field]) {\n            tileData.push({\n                name, image\n            })\n        }\n    });\n\n    return (\n        <GridList cellHeight={56} cols={Math.min(5, tileData.length)}>\n            {pickRandom(tileData, {count: Math.min(5, tileData.length)}).map(tile => (\n                <GridListTile key={tile.name} cols={1} onClick={evt => evt.stopPropagation()}>\n                    <Tooltip disableHoverListener title={tile.name}  enterDelay={200} leaveDelay={500}>\n                        <img src={tile.image} alt={tile.name} style={{ height: 56 }} />\n                    </Tooltip>\n                </GridListTile>\n            ))}\n        </GridList>\n    );\n};\n","import React, { Component } from 'react';\n\nimport Map from '../Map/Map';\nimport one from '../../route.json';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport search from './search.svg';\nimport logo from './logo3.svg';\nimport { Button } from '@material-ui/core';\nimport Icon from './icons/Icon';\nimport fixtures from './routes.json';\n\nconst style = {\n    width: '100%',\n    display: 'flex',\n    'justifyContent': 'space-between',\n    'flexDirection': 'row',\n};\n\nconst Item = ({ title, value }) => (\n    <ListItem style={style}>\n        <span>{title}: </span>\n        <span>{value}</span>\n    </ListItem>\n);\n\nclass ListOfWalks extends Component {\n    state = {\n        list: []\n    }\n\n    componentDidMount() {\n        this.setState({\n            list: fixtures.slice(0, 5),\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <div style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    flex: 1,\n                    flexDirection: 'column'\n                }}>\n                    <img src={logo} style={{ width: '50vw' }} alt=\"G\" />\n                    <sub><i>Take your mind for a walk</i></sub>\n                    <Button variant=\"extendedFab\" style={{ marginTop: '1rem' }} color=\"primary\">\n                        <img width=\"24\" height=\"24\" src={search} style={{ marginRight: '1rem' }} />\n                        Search\n                    </Button>\n                </div>\n                <List style={{ width: '100%' }}>\n                    {this.state.list.map(walk => (\n                        <ListItem>\n                            <Card onClick={() => this.props.onSelect(walk)} style={{ width: '100%'}}>\n                                <div style={{ height: 200, width: '100%' }}>\n                                    <Map dragging={false} zoomControl={false} touchZoom={false} doubleClickZoom={false} scrollWheelZoom={false} centerRoute route={walk.path} />\n                                </div>\n                                <CardContent style={{ paddingTop: 0 }}>\n                                    <div>\n                                        <List>\n                                            <Item title=\"Distance\" value={\n                                                (walk.distance < 1 ? 'less than ' : '') +\n                                                Math.round(walk.distance) + (Math.round(walk.distance) > 1 ? ' miles' : ' mile') + ' away'\n                                            }/>\n                                            <Item title=\"Time\" value={`${walk.time} minutes`} />\n                                            <ListItem>\n                                                <Icon meta={walk} key={walk.id} />\n                                            </ListItem>\n                                        </List>\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </ListItem>\n                    ))}\n                </List>\n            </div>\n        );\n    }\n}\n\n\nexport default ListOfWalks;\n","import React, { Component } from 'react';\nimport { Router, Route, Link, Switch } from \"react-router-dom\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport FullscreenMap from './components/FullscreenMap/FullscreenMap';\nimport Search from \"./components/Search/Search\";\nimport { createBrowserHistory } from 'history';\nimport List from './components/List/List';\n\nconst existing = localStorage.getItem('active-walk');\n\nconst { PUBLIC_URL } = process.env;\nconst history = createBrowserHistory({\n  basename: PUBLIC_URL || '',\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#ec6711',\n    },\n    secondary: {\n      main: '#b39a19'\n    },\n  },\n});\n\nexport const pp = (p) => `${''}${p}`;\n\nclass App extends Component {\n  state = {\n    active: existing && JSON.parse(existing),\n  };\n\n  selectRoute = (walk) => {\n    this.setState({active: walk});\n    localStorage.setItem('active-walk', JSON.stringify(walk));\n    history.push(pp('/map'));\n  };\n\n  render() {\n    return (\n      <div style={{height: '100%', width: '100%'}}>\n        <MuiThemeProvider theme={theme}>\n          <Router history={history}>\n            <Switch style={{ height: '100%', width: '100%'}}>\n              <Route path={`/`} exact>\n                <List onSelect={this.selectRoute} />\n              </Route>\n              <Route path={`/map`}>\n                {(p) => (\n                  <FullscreenMap centerRoute active={this.state.active} route={this.state.active && this.state.active.path} />\n                )}\n              </Route>\n              <Route path={`/search`}>\n                  <h1>hi</h1>\n              </Route>\n            </Switch>\n          </Router>\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}